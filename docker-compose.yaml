name: crypto_exchange

services:
  app:
    container_name: crypto_exchange_app
    image: crypto_exchange_app:latest
    build:
      context: .
      dockerfile: Dockerfile
    command: >
      bash -c "python manage.py migrate
      && python manage.py seeder --users=10 --crypto=10
      && gunicorn --workers=3 --timeout=600 --bind=0.0.0.0:8000 core.wsgi:application"
    depends_on:
      - postgres
      - redis
    env_file:
      - .compose/config.env
    networks:
      - crypto-exchange
    ports:
      - "8000:8000"
    restart: unless-stopped
    volumes:
      - app-data:/app
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8000/health/" ]
      interval: 30s
      timeout: 10s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  postgres:
    container_name: crypto_exchange_postgres
    image: postgres:16.2
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: crypto_exchange
    networks:
      - crypto-exchange
    ports:
      - "5433:5432"
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data

  celery:
    container_name: crypto_exchange_celery
    image: crypto_exchange_app:latest
    build:
      context: .
      dockerfile: Dockerfile
    command: bash -c "celery -A core.celery worker --beat -l info "
    depends_on:
      - postgres
      - redis
    env_file:
      - .compose/config.env
    networks:
      - crypto-exchange
    restart: unless-stopped

  redis:
    container_name: crypto_exchange_redis
    image: redis:7.2
    command: [ "redis-server", "--requirepass", "redis_password" ]
    networks:
      - crypto-exchange
    ports:
      - "6379:6379"
    restart: unless-stopped
    volumes:
      - redis-data:/data

networks:
  crypto-exchange:
    driver: bridge

volumes:
  postgres-data:
  redis-data:
  app-data: